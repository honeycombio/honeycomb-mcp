{
  "id": "multi-step-with-fallbacks",
  "name": "Multi-Step Query with Fallback Parameters",
  "description": "Tests a multi-step scenario with parameter expansion and explicit fallbacks",
  "prompt": "Retrieve datasets, then analyze a specific dataset's columns, and finally run a query using that information",
  "steps": [
    {
      "tool": "list_datasets",
      "parameters": {
        "environment": "ms-demo"
      },
      "description": "Get a list of all datasets in the environment"
    },
    {
      "tool": "get_columns",
      "parameters": {
        "environment": "ms-demo",
        "dataset": "${{step:0.datasets[0].name||frontend}}"
      },
      "description": "Get column information for the first available dataset"
    },
    {
      "tool": "run_query",
      "parameters": {
        "environment": "ms-demo",
        "dataset": "${{step:0.datasets[0].name||frontend}}",
        "calculations": [
          {
            "op": "AVG",
            "column": "${{step:1.columns[0].key||duration_ms}}"
          },
          {
            "op": "P95",
            "column": "${{step:1.columns[0].key||duration_ms}}"
          }
        ],
        "filters": [
          {
            "column": "${{step:1.columns[1].key||service.name}}",
            "op": "exists"
          }
        ],
        "breakdowns": [
          "${{step:1.columns[1].key||service.name}}"
        ],
        "time_range": 3600,
        "orders": [
          {
            "op": "P95",
            "column": "${{step:1.columns[0].key||duration_ms}}",
            "order": "descending"
          }
        ],
        "limit": 5
      },
      "description": "Run a targeted query analyzing metrics using columns discovered in previous steps"
    }
  ],
  "validation": {
    "prompt": "Evaluate whether all three tool calls were successful and demonstrate a logical workflow. The first response should return a list of datasets. The second call should retrieve columns for the first dataset (or 'frontend' if that fails). The third call should run a meaningful query using information from previous steps with appropriate fallbacks if needed. All responses should be error-free and contain expected data.",
    "expectedOutcome": {
      "success": true,
      "criteria": [
        "First call returns a list of available datasets",
        "Second call retrieves column information for a specific dataset",
        "Third call runs a query using information from previous steps or appropriate fallbacks",
        "All calls execute successfully without errors",
        "The workflow demonstrates progressive information discovery with resilience to failures"
      ]
    }
  },
  "options": {
    "timeout": 20000
  }
}